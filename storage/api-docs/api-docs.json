{
    "openapi": "3.0.0",
    "info": {
        "title": "Claneo SMT BackendApi Documentation",
        "description": "Claneo SMT BackendApi",
        "contact": {
            "email": "mrudchenko@brightgrove.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Backend API Server"
        }
    ],
    "paths": {
        "/account/edit": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Edit current user's account. In progress...",
                "operationId": "editAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get current user info",
                "description": "Returns current user's info",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user by admin",
                "description": "Accessible for only User with the 'Admin' Role",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login to get Auth Token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad Credentials"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    },
                    "403": {
                        "description": "User should accept Privacy Policy first"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout to remove Auth Token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/change-pwd": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change password for non-logged user",
                "operationId": "change-pwd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                }
            }
        },
        "/forgot-pwd": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send reset password link",
                "operationId": "forgot-pwd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Index",
                "operationId": "roles_index",
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleResource"
                                            },
                                            "collectionFormat": "multi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create Role",
                "operationId": "roles_store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/roles/{role}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Show Role",
                "operationId": "roles_show",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "The role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Error: Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update Role",
                "operationId": "roles_update",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "The role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Error: Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete Role",
                "operationId": "roles_delete",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "The role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything is fine"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Error: Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Index",
                "operationId": "users_index",
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "current_page": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "data": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/UserResource"
                                                        },
                                                        "collectionFormat": "multi"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "collectionFormat": "multi"
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/users?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 4
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/users?page=4"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "url": null,
                                                    "label": "&laquo; Previous",
                                                    "active": false
                                                },
                                                {
                                                    "url": "http://127.0.0.1:8000/api/users?page=1",
                                                    "label": "1",
                                                    "active": true
                                                },
                                                {
                                                    "url": "http://127.0.0.1:8000/api/users?page=2",
                                                    "label": "2",
                                                    "active": false
                                                },
                                                {
                                                    "url": "http://127.0.0.1:8000/api/users?page=3",
                                                    "label": "3",
                                                    "active": false
                                                },
                                                {
                                                    "url": "http://127.0.0.1:8000/api/users?page=4",
                                                    "label": "4",
                                                    "active": false
                                                },
                                                {
                                                    "url": "http://127.0.0.1:8000/api/users?page=2",
                                                    "label": "Next &raquo;",
                                                    "active": false
                                                }
                                            ]
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/users?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/users"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 4
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show User",
                "operationId": "users_show",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Error: Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "operationId": "users_update",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Error: Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "operationId": "users_delete",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything is fine"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Error: Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ChangePasswordRequest": {
                "title": "Change Password Request",
                "description": "Change Password Request",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of user",
                        "type": "string",
                        "example": "12345"
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "description": "Enter the same password again",
                        "type": "string",
                        "example": "12345"
                    },
                    "token": {
                        "title": "Token",
                        "description": "Token from Email",
                        "type": "string",
                        "example": "noC1CHhmimTuwFpx"
                    }
                },
                "type": "object"
            },
            "EditUserRequest": {
                "title": "Edit User Request",
                "description": "Edit User Request",
                "properties": {
                    "password": {
                        "title": "Password",
                        "description": "Password of user",
                        "type": "string",
                        "example": "12345"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "title": "Reset Password Request",
                "description": "Reset Password Request",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Login Request",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "LoginResource": {
                "title": "Login Resource",
                "description": "Login Resource",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "token": {
                        "title": "token",
                        "description": "Auth Token",
                        "type": "string",
                        "example": "17|1VtteyF1QBiywXwNLQiK80pq7ioJvVAq1C6C6VwO"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register Request",
                "description": "Register Request",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "first_name": {
                        "title": "first_name",
                        "description": "first_name of user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "last_name of user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "roles": {
                        "title": "roles",
                        "description": "Roles of user",
                        "type": "string",
                        "example": [
                            5,
                            6
                        ]
                    }
                },
                "type": "object"
            },
            "RoleRequest": {
                "title": "Role Request",
                "description": "Role Request",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of role",
                        "type": "string",
                        "example": "user"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of user",
                        "type": "string",
                        "example": "SImple User"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "description": "Role Resource",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "ID of Role",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": " Name of Role",
                        "type": "string",
                        "example": "SEO"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of role",
                        "type": "string",
                        "example": "SEO Manager"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "created date of user",
                        "type": "string",
                        "example": "2021-10-07T19:34:40.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated date of user",
                        "type": "string",
                        "example": "2021-10-07T19:34:40.000000Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User Resource",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "ID of User",
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "title": "first_name",
                        "description": "First Name of user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "Last Name of user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "email_verified_at": {
                        "title": "email_verified_at",
                        "description": "Email verified date of user",
                        "type": "string",
                        "example": "NULL"
                    },
                    "privacy_policy_flag": {
                        "title": "privacy_policy_flag",
                        "description": "Has the user read the privacy policy??",
                        "type": "integer",
                        "example": 0
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "created date of user",
                        "type": "string",
                        "example": "2021-10-07T19:34:40.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated date of user",
                        "type": "string",
                        "example": "2021-10-07T19:34:40.000000Z"
                    },
                    "roles": {
                        "title": "roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResource"
                        },
                        "collectionFormat": "multi"
                    }
                },
                "type": "object"
            },
            "UserUpdateRequest": {
                "title": "User Update Request",
                "description": "User Request for update action",
                "properties": {
                    "first_name": {
                        "title": "first_ame",
                        "description": "First Name of user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "last_ame",
                        "description": "Last Name of user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "privacy_policy_flag": {
                        "title": "privacy_policy_flag",
                        "description": "Has the user read the privacy policy?",
                        "type": "integer",
                        "example": 0
                    },
                    "roles": {
                        "title": "roles",
                        "description": "Roles of user",
                        "type": "string",
                        "example": [
                            5,
                            6
                        ]
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints of Authentication"
        },
        {
            "name": "Account",
            "description": "API Endpoints of Current User"
        },
        {
            "name": "Roles",
            "description": "API Endpoints of Roles"
        },
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        }
    ],
    "security": [
        []
    ]
}