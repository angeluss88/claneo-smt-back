{
    "openapi": "3.0.0",
    "info": {
        "title": "Claneo SMT BackendApi Documentation",
        "description": "Claneo SMT BackendApi",
        "contact": {
            "email": "mrudchenko@brightgrove.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Backend API Server"
        }
    ],
    "paths": {
        "/account/edit": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Edit current user's account",
                "operationId": "editAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get current user info",
                "description": "Returns current user's info",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user by admin",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login to get Auth Token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad Credentials"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout to remove Auth Token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "EditUserRequest": {
                "title": "Edit User Request",
                "description": "Edit User Request",
                "properties": {
                    "password": {
                        "title": "Password",
                        "description": "Password of user",
                        "type": "string",
                        "example": "12345"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Login Request",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "LoginResource": {
                "title": "Login Resource",
                "description": "Login Resource",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "token": {
                        "title": "token",
                        "description": "Auth Token",
                        "type": "string",
                        "example": "17|1VtteyF1QBiywXwNLQiK80pq7ioJvVAq1C6C6VwO"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register Request",
                "description": "Register Request",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of user",
                        "type": "string",
                        "example": "User"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User Resource",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "ID of User",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of user",
                        "type": "string",
                        "example": "User"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "example": "user@loc"
                    },
                    "email_verified_at": {
                        "title": "email_verified_at",
                        "description": "Email verified date of user",
                        "type": "string",
                        "example": "NULL"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "created date of user",
                        "type": "string",
                        "example": "2021-10-07T19:34:40.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated date of user",
                        "type": "string",
                        "example": "2021-10-07T19:34:40.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints of Authentication"
        },
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        },
        {
            "name": "Account",
            "description": "API Endpoints of Current User"
        }
    ],
    "security": [
        []
    ]
}